[{"title":"Add_BGM","url":"/2025/05/19/Add_BGM/","content":"向主页添加了第一首歌，然后又添加了4首。  \n记录一下操作：  \n\n打开 aaaaa_online\\_config.redefine.yml 找到 plugins/aplayer/audios ，复制一份如下代码：  \n\nartist: 葉月ゆら # audio artist\nurl: /music/HAMELN.mp3 # audio url\ncover: /images/cover/HAMELN.png # audio cover url\nlrc: # audio cover lrc\n\n\n\n\n更改作者、曲名；  \n\n在 aaaaa_online\\node_modules\\hexo-theme-redefine\\source\\music 目录下保存一份 mp3 ，在 aaaaa_online\\node_modules\\hexo-theme-redefine\\source\\images\\cover 目录下保存一份背景图；  \n\n上传！\n\n\n这个播放器插件声音有点大，而且没办法调节声音大小，略显不方便。以后找机会换一个能调声音大小的。\n","tags":["Website_building"]},{"title":"Make Friends","url":"/2025/05/19/Make%20Friends/","content":"添加了友链功能。  \n记录一下操作：  \n\n打开 aaaaa_online\\source\\_data\\links.yml ，添加以下内容：  \n\n - name:  # Name\n   link:  # Friend&#39;s link\n   description:  # Individual signiture\n   avatar:  # Photo\n\n\n\n\n编辑姓名、友链、个签、头像；  \n\n上传！\n\n\n","tags":["Website_building"]},{"title":"Musician更新：支持Linux风格指令集","url":"/2025/05/26/Musician%E6%9B%B4%E6%96%B0%EF%BC%9A%E6%94%AF%E6%8C%81Linux%E9%A3%8E%E6%A0%BC%E6%8C%87%E4%BB%A4%E9%9B%86/","content":"仓库放开头:  aaaaa114514-1&#x2F;musician: An individual music player with a little bit more functions.   \nMusician 迎来了上线以来的第一次更新：更新了Linux风格的指令集！  \n今后，可以使用 :q :? 等熟悉的指令来快捷操作 Musician 啦！\n","tags":["Projects"]},{"title":"Musician音乐播放器","url":"/2025/05/21/Musician%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8/","content":"仓库放开头:  aaaaa114514-1&#x2F;musician: An individual music player with a little bit more functions. \n听音乐是个不错的爱好。  \n但是，一放音乐就卡的Windows自带播放器体感极度不舒适；mediaPlayer虽然可以播放音乐，但是它的UI风格实在有点年代感，用着也不太习惯。  \n恰好，一年前，在学习网络爬虫的时候，我用python写了个酷狗音乐的爬虫，25年年初的时候翻出来测试，发现已经跟不上版本了；恰好，我在群里听说，网易云的本地文件加密是用的按位 ^163 的方法。  \n于是，在2025年3月，我决定用python写一个小型Project，用命令行写一个播放器，集成酷狗和网易云下载工具，以解决自己的播放器问题。  \n不到一个礼拜，代码的主要部分就完工了。后来在使用过程中陆续发现了一些bug，顺便开发了一些必要的功能，比如说一开始没做的“上一曲”（不知道我当时为什么没设计这么重要的功能），为了睡眠质量而开发的“定时关闭”，以及后来加上的“数据统计 history”等等。  \n现在，这个项目已经初具雏形，虽然离趋于完善还有很长的路，不过可以先分享出来，一边接受反馈，一边修改。  \n仓库是今天新建的，先写了英文版的README，后来又加了中文版。略微修改了原来程序的接口，使得移植更加方便了。中文版的README一同贴出来：  \nMusician一个拥有曲库管理功能的命令行音乐播放器代码 aaaaa\nMusician 是一个命令行控制的音乐播放器，专为程序员音乐爱好者设计，支持：\n\n听歌\n从酷狗音乐或网易云音乐免费下载歌曲\n建立个人曲库\n记录播放历史\n\n程序使用 Python 编写，播放功能基于 pygame。由于作者编程水平有限，可能存在一些 Bug——欢迎反馈，我会尽力修复！\n\n程序概览musician 目录包含以下文件：\nmusician/├── history.txt        # 播放历史记录  ├── Icon.ico           # 程序图标  ├── musician.exe       # 可执行文件（用户使用）  ├── musician.py        # 源代码（开发者查看）  ├── README.md          # 说明文档  └── savedata.txt       # 配置文件  \n\n\n用户：修改 savedata.txt（仅首次配置），然后运行 musician.exe。\n开发者：可查看 musician.py 和 savedata.txt。\n\n\n用户指南1. 配置 savedata.txt该文件定义了路径和设置：\nC:\\Users\\Netease\\CloudMusic\\Cache\\Cache   # 网易云音乐缓存路径  D:\\BGM\\Download&amp;Decode                    # 下载/解码目录  D:\\BGM\\Download&amp;Decode\\temp               # 临时文件存放  D:\\BGM\\Lis                                # 播放列表文件夹  D:\\BGM                                    # 主音乐库  0.4                                       # 默认音量（0–1）  30                                        # 搜索匹配阈值（%）  1d4e5b7decbe434048e596ae2d597adb          # 酷狗 token（后32位）  D:\\BGM\\Settings\\history.txt               # 历史记录文件路径  \n\n配置步骤\n网易云缓存路径\n\n打开 网易云音乐桌面端 → 设置 → 下载 → 复制缓存路径。\n在路径末尾手动添加 \\Cache（如 C:\\...\\Cache\\Cache）。\n\n\n音乐库文件夹创建以下目录（示例名称）：\nBGM/  ├── Download&amp;Decode/  # 用于下载/解码  │   └── temp/         # 临时文件  └── Lis/              # 播放列表存放  \n\n将它们的路径填入 savedata.txt 的第 2–5 行。\n\n酷狗 Token（可选）\n\n登录 酷狗音乐官网。\n播放任意歌曲 → 按 F12 打开开发者工具 → Network（网络） 标签。\n找到 https://wwwapi.kugou.com/play/songinfo? 的请求。\n复制 token 参数的最后32位字符，即在...5e6de之后的部分（如 55f2409f72970daa21bdc63acee305db）。\n粘贴到 savedata.txt 第 8 行。\n如果不需要使用酷狗下载音乐，可跳过此步。\n\n\n历史记录文件指定 history.txt 的路径（第 9 行）并将给出的 history.txt 文件移到指定路径下，程序会自动管理该文件。\n\n\n\n2. 命令速查在 &gt;&gt; 后输入命令（不区分大小写）。\n基础操作\n\n\n命令\n功能\n\n\n\nquit&#x2F;exit&#x2F;end\n退出程序（尽可能不要用右上角的×退出程序）。\n\n\nhelp\n显示所有命令。\n\n\n网易云音乐\n\n\n命令\n功能\n\n\n\ncheck163\n列出缓存歌曲（若报错，请检查网络连接）。\n\n\ndecode &lt;编号&gt;\n解码歌曲（如 decode 3 或 decode 2 5-9 4）。\n\n\nclear163\n清空缓存（先关闭网易云桌面端！）。\n\n\n酷狗音乐\n\n\n命令\n功能\n\n\n\nsearch &lt;歌名&gt;\n搜索（如 search 夏の紫苑）。\n\n\ndownload &lt;编号&gt;\n下载（VIP 歌曲需先登录酷狗VIP账号）。\n\n\n播放控制\n\n\n命令\n功能\n\n\n\nplay&#x2F;pause\n播放&#x2F;暂停。\n\n\nplay &lt;编号&gt;\n播放指定歌曲（如 play 1-3 5）。\n\n\nadd &lt;编号&gt;\n添加到播放列表。\n\n\nmode &lt;single/cycle/random&gt;\n设置播放模式（单曲循环&#x2F;列表循环&#x2F;随机）。\n\n\nstop\n停止播放。\n\n\nlast&#x2F;previous\n上一首。\n\n\nnext\n下一首。\n\n\nrestart&#x2F;replay\n重新播放当前歌曲。\n\n\nvolume &lt;数值&gt;\n调整音量（0–100%，如 volume 40）。\n\n\n音乐库 &amp; 历史\n\n\n命令\n功能\n\n\n\nsavelist\n显示已下载歌曲。\n\n\nsave &lt;Lis/BGM&gt;\n将歌曲移至 Lis（播放列表）与 BGM（音乐库）&#x2F;仅移至BGM。\n\n\nclear\n清空下载列表。\n\n\nlibrary\n浏览音乐库。\n\n\nlookup &lt;歌名&gt;\n搜索音乐库。\n\n\ntimelimit &lt;分钟&gt;\n设置最长播放时间（如 timelimit 45）。\n\n\nhistory\n查看播放历史。\n\n\n?\n显示当前播放的歌曲。\n\n\n\n曲库以mp3格式为默认存储格式，其他格式的音频将无法播放。你可以将原本的个人曲库直接迁移到 BGM 和 Lis 列表下。\n请务必在 BGM 和 Lis 列表下分别存放至少1个mp3文件，否则曲库会崩溃！ \n\n开发者说明\n先阅读用户指南了解功能逻辑。\n查看 musician.py——代码应该还算易懂（大概）。😊\n在终端用指令 pyinstaller --onefile musician.py -i Icon.ico 来将 .py 文件打包成 .exe 文件。\n\n\n祝你在 Musician 的陪伴下享受音乐！ 🎵\n","tags":["Projects"]},{"title":"The_First_Step","url":"/2025/05/17/The_First_Step/","content":"个人网页终于建出来了！感谢 Arahc 的帮助！  \n友情链接：  Arahc’s Home - A simple blog site.  \n时间不早了，今天测完网页就睡。  \n记录一下操作：  \n\n$ hexo clean 清除generate的内容;\n$ hexo g generate: 生成基于新的内容的 bulider;  \n$ hexo s server: 开启本地服务器，用于测试;  \n(默认在 http://localhost:4000/ 打开本地测试)\n\n\n$ hexo d deploy: 部署到网页，发布到公网。\n\n在 Github仓库 可以看到上传的内容与上传的进度。由于上传很慢，所以要本地测试后再上传。  \n","tags":["Website_building"]}]